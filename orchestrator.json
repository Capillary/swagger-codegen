{
  "swagger": "2.0",
  "info": {
    "description": "Potato OTA Transaction Orchestrator",
    "version": "1.0",
    "title": "POTATO",
    "contact": {
      "name": "Capillary Technologies",
      "url": "https://www.capillarytech.com"
    },
    "license": {}
  },
  "host": "localhost:8100",
  "basePath": "/",
  "tags": [
    {
      "name": "_2c-2p-callback-resource",
      "description": "_2c 2p Callback Resource"
    },
    {
      "name": "admin-workflow-resource",
      "description": "Admin Workflow Resource"
    },
    {
      "name": "eghl-call-back-resource",
      "description": "Eghl Call Back Resource"
    },
    {
      "name": "eghl-reconciliation",
      "description": "EGHL Reconciliation"
    },
    {
      "name": "external-api-error-code-mapping-resource",
      "description": "External API Error Code Mapping Resource"
    },
    {
      "name": "health-check-resource",
      "description": "Health Check Resource"
    },
    {
      "name": "mobile-card-registration-resource",
      "description": "Mobile Card Registration Resource"
    },
    {
      "name": "open-api-web-mvc-resource",
      "description": "Open Api Web Mvc Resource"
    },
    {
      "name": "payments-resource",
      "description": "Payments Resource"
    },
    {
      "name": "psp-auth-support-resource",
      "description": "Psp Auth Support Resource"
    },
    {
      "name": "psp-performance-resource",
      "description": "Psp Performance Resource"
    },
    {
      "name": "pump-life-cycle-resource",
      "description": "Pump Life Cycle Resource"
    },
    {
      "name": "pump-performance-resource",
      "description": "Pump Performance Resource"
    },
    {
      "name": "register-rest-controller",
      "description": "Register Rest Controller"
    },
    {
      "name": "site-cancel-resource",
      "description": "Site Cancel Resource"
    },
    {
      "name": "site-server-to-server-resource",
      "description": "Site Server To Server Resource"
    },
    {
      "name": "swagger-config-resource",
      "description": "Swagger Config Resource"
    },
    {
      "name": "test-fuelling-workflow-resource",
      "description": "Test Fuelling Workflow Resource"
    },
    {
      "name": "transaction-status-resource",
      "description": "Transaction Status Resource"
    },
    {
      "name": "txn-status-resource",
      "description": "Txn Status Resource"
    }
  ],
  "paths": {
    "/external/errorcode/mapping": {
      "get": {
        "tags": [
          "external-api-error-code-mapping-resource"
        ],
        "summary": "getMapping",
        "operationId": "getMappingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SHELL"
            ]
          },
          {
            "name": "useCase",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CARD_REGISTRATION",
              "FUELING",
              "NON"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalAPIErrorCodeMappingDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "external-api-error-code-mapping-resource"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "errorMapping",
            "description": "errorMapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalAPIErrorCodeMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResponse«ExternalAPIErrorCodeMappingResponse»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/external/errorcode/mapping/bulk": {
      "post": {
        "tags": [
          "external-api-error-code-mapping-resource"
        ],
        "summary": "bulkCreate",
        "operationId": "bulkCreateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "errorMappingList",
            "description": "errorMappingList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalAPIErrorCodeMapping"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/hi": {
      "post": {
        "tags": [
          "register-rest-controller"
        ],
        "summary": "register",
        "operationId": "registerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app": {
      "get": {
        "tags": [
          "pump-life-cycle-resource"
        ],
        "summary": "get",
        "operationId": "getUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/pumpReserve/{version}": {
      "post": {
        "tags": [
          "test-fuelling-workflow-resource"
        ],
        "summary": "pumpReserveWithGivenVersion",
        "operationId": "pumpReserveWithGivenVersionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pumpReserve",
            "description": "pumpReserve",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PumpReserve"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileResponseBody«PumpReserve»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/failure-rate/bank": {
      "get": {
        "tags": [
          "psp-performance-resource"
        ],
        "summary": "pspStat",
        "operationId": "pspStatUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "bankName",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "durationHours",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "psp",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatResponse«Map«string,PerformanceBo»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/failure-rate/pump": {
      "get": {
        "tags": [
          "pump-performance-resource"
        ],
        "summary": "pumpStat",
        "operationId": "pumpStatUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "durationHours",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "siteId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatResponse«Map«string,PerformanceBo»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/fuelling-status": {
      "get": {
        "tags": [
          "transaction-status-resource"
        ],
        "summary": "status",
        "operationId": "statusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppTransactionStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/hash/{paymentId}": {
      "get": {
        "tags": [
          "psp-auth-support-resource"
        ],
        "summary": "hashing",
        "operationId": "hashingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "pspName",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "2C2P",
              "EGHL"
            ]
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HashingSupportResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/pump-activate": {
      "post": {
        "tags": [
          "pump-life-cycle-resource"
        ],
        "summary": "activatePump",
        "operationId": "activatePumpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "preAuthorizeRequest",
            "description": "preAuthorizeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreAuthorizeStep"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileResponseBody«PreAuthorizeStep»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/pump-cancel": {
      "post": {
        "tags": [
          "pump-life-cycle-resource"
        ],
        "summary": "cancelPump",
        "operationId": "cancelPumpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cancelRequest",
            "description": "cancelRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancelResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/pump-reserve": {
      "post": {
        "tags": [
          "pump-life-cycle-resource"
        ],
        "summary": "pumpReserve",
        "operationId": "pumpReserveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pumpReserve",
            "description": "pumpReserve",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PumpReserve"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileResponseBody«PumpReserve»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/app/v1/register-paymentId": {
      "post": {
        "tags": [
          "mobile-card-registration-resource"
        ],
        "summary": "generatePaymentIdentifier",
        "operationId": "generatePaymentIdentifierUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tokenizeRO",
            "description": "tokenizeRO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenizeRO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileResponseBody«TokenizeRO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/intouch/txn-status/payment-id/{paymentId}": {
      "get": {
        "tags": [
          "txn-status-resource"
        ],
        "summary": "getStatusByPaymentId",
        "operationId": "getStatusByPaymentIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResponse«TxnStatusBo»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/intouch/txn-status/user-id/{userId}": {
      "get": {
        "tags": [
          "txn-status-resource"
        ],
        "summary": "OTATransactionsByUserId",
        "operationId": "OTATransactionsByUserIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResponse«List«UserTransactionBo»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/v1/site/cancel": {
      "post": {
        "tags": [
          "site-cancel-resource"
        ],
        "summary": "cancel",
        "operationId": "cancelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cancelRO",
            "description": "cancelRO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelRO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/v1/site/finalize-txn": {
      "post": {
        "tags": [
          "site-server-to-server-resource"
        ],
        "summary": "finalizeTransaction",
        "operationId": "finalizeTransactionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "transactionAddRO",
            "description": "transactionAddRO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionAddRO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/v1/site/get-offers": {
      "post": {
        "tags": [
          "site-server-to-server-resource"
        ],
        "summary": "offerEvaluation",
        "operationId": "offerEvaluationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "offerEvaluationReq",
            "description": "offerEvaluationReq",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferEvaluation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfferEvaluation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/webhooks/2c2p/fuelling-callback": {
      "post": {
        "tags": [
          "_2c-2p-callback-resource"
        ],
        "summary": "fuellingCallBack",
        "operationId": "fuellingCallBackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "callbackRequest",
            "description": "callbackRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/_2c2pCallbackRequest"
            }
          },
          {
            "name": "defaultCard",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extCorrelationID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentProvider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/webhooks/2c2p/register-callback": {
      "post": {
        "tags": [
          "_2c-2p-callback-resource"
        ],
        "summary": "registerCallBack",
        "operationId": "registerCallBackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "callbackRequest",
            "description": "callbackRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/_2c2pCallbackRequest"
            }
          },
          {
            "name": "defaultCard",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extCorrelationID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paymentProvider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/orchestrator/payments/webhooks/eghl/transaction": {
      "post": {
        "tags": [
          "eghl-call-back-resource"
        ],
        "summary": "callback",
        "operationId": "callbackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "callBackData",
            "description": "callBackData",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "health-check-resource"
        ],
        "summary": "application health check",
        "operationId": "healthCheckUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow": {
      "get": {
        "tags": [
          "admin-workflow-resource"
        ],
        "summary": "get",
        "operationId": "getUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allVersions",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetEntityResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "admin-workflow-resource"
        ],
        "summary": "create",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "workflowProcess",
            "description": "workflowProcess",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResponse«WorkFlowCreationResponse»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/promotion": {
      "put": {
        "tags": [
          "admin-workflow-resource"
        ],
        "summary": "promoteWorkFlow",
        "operationId": "promoteWorkFlowUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "workFlowPromote",
            "description": "workFlowPromote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkFlowPromote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdatedEntityResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/psp/reconciliation/capture": {
      "post": {
        "tags": [
          "eghl-reconciliation"
        ],
        "summary": "reconciliationCapture",
        "operationId": "reconciliationCaptureUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/psp/reconciliation/fuelling-reversal": {
      "post": {
        "tags": [
          "eghl-reconciliation"
        ],
        "summary": "reconciliationFuellingReversal",
        "operationId": "reconciliationFuellingReversalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/psp/reconciliation/registration-reversal": {
      "post": {
        "tags": [
          "eghl-reconciliation"
        ],
        "summary": "reconciliationRegistrationReversal",
        "operationId": "reconciliationRegistrationReversalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/shell/billing/evaluateOffer": {
      "post": {
        "tags": [
          "payments-resource"
        ],
        "summary": "evaluateOffers",
        "operationId": "evaluateOffersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "completeRequest",
            "description": "completeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferEvaluationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResponse«OfferEvaluation»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v1/workflow/shell/billing/transactionAdd": {
      "post": {
        "tags": [
          "payments-resource"
        ],
        "summary": "txnAdd",
        "operationId": "txnAddUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "transactionAddRO",
            "description": "transactionAddRO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionAddRO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionAddResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v3/api-docs": {
      "get": {
        "tags": [
          "open-api-web-mvc-resource"
        ],
        "summary": "openapiJson",
        "operationId": "openapiJsonUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apiDocsUrl",
            "in": "query",
            "description": "apiDocsUrl",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v3/api-docs.yaml": {
      "get": {
        "tags": [
          "open-api-web-mvc-resource"
        ],
        "summary": "openapiYaml",
        "operationId": "openapiYamlUsingGET",
        "produces": [
          "application/vnd.oai.openapi"
        ],
        "parameters": [
          {
            "name": "apiDocsUrl",
            "in": "query",
            "description": "apiDocsUrl",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    },
    "/v3/api-docs/swagger-config": {
      "get": {
        "tags": [
          "swagger-config-resource"
        ],
        "summary": "openapiJson",
        "operationId": "openapiJsonUsingGET_1",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "X-CAP-API-AUTH-ORG-ID": [
              "global"
            ]
          },
          {
            "X-CAP-API-AUTH-ENTITY-ID": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-CODE": [
              "global"
            ]
          },
          {
            "X-CAP-ENTITY-ID": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "X-CAP-API-AUTH-ENTITY-ID": {
      "type": "apiKey",
      "name": "X-CAP-API-AUTH-ENTITY-ID",
      "in": "header"
    },
    "X-CAP-API-AUTH-ORG-ID": {
      "type": "apiKey",
      "name": "X-CAP-API-AUTH-ORG-ID",
      "in": "header"
    },
    "X-CAP-ENTITY-CODE": {
      "type": "apiKey",
      "name": "X-CAP-ENTITY-CODE",
      "in": "header"
    },
    "X-CAP-ENTITY-ID": {
      "type": "apiKey",
      "name": "X-CAP-ENTITY-ID",
      "in": "header"
    }
  },
  "definitions": {
    "ActionInput": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "brand": {
          "type": "string",
          "enum": [
            "SHELL"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "customerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "entityCode": {
          "type": "string"
        },
        "entityId": {
          "type": "integer",
          "format": "int64"
        },
        "input": {
          "type": "object"
        },
        "merchantIDStrategy": {
          "type": "string",
          "enum": [
            "ORG_LEVEL",
            "PER_STORE"
          ]
        },
        "orgId": {
          "type": "integer",
          "format": "int64"
        },
        "processInstanceId": {
          "type": "string"
        },
        "resetStepOnFailure": {
          "type": "boolean"
        },
        "rollbackOnFailure": {
          "type": "boolean"
        },
        "useCase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        },
        "version": {
          "type": "string"
        },
        "workFlowName": {
          "type": "string"
        }
      },
      "title": "ActionInput"
    },
    "AppTransactionStatusResponse": {
      "type": "object",
      "properties": {
        "billingAmount": {
          "type": "string"
        },
        "billingLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "digitalCard": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "maskedCard": {
          "type": "string"
        },
        "mop": {
          "type": "string"
        },
        "mopName": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "pointsAllocated": {
          "type": "string"
        },
        "preAuthAmount": {
          "type": "string"
        },
        "processInstanceId": {
          "type": "string"
        },
        "pspReferenceNumber": {
          "type": "string"
        },
        "pumpActivateTime": {
          "type": "string"
        },
        "pumpNumber": {
          "type": "string"
        },
        "pumpReserveTime": {
          "type": "string"
        },
        "stationId": {
          "type": "string"
        },
        "transactionState": {
          "type": "string",
          "enum": [
            "BILLING_IN_PROGRESS",
            "BILL_GENERATED",
            "CARD_REGISTERED",
            "CARD_REGISTER_IN_PROGRESS",
            "FUELING_CANCELLED_BY_CUSTOMER",
            "FUELING_CANCELLED_BY_STATION",
            "IN_PROGRESS",
            "PSP_AUTH_FAIL",
            "PUMP_ACTIVATION_FAIL",
            "PUMP_ACTIVATION_SUCCESS",
            "PUMP_RESERVE_FAIL",
            "PUMP_RESERVE_SUCCESS",
            "TXN_STATE_UNKNOWN"
          ]
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        }
      },
      "title": "AppTransactionStatusResponse"
    },
    "ApplicableVoucher": {
      "type": "object",
      "properties": {
        "additionalVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "promotionType": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "number"
        }
      },
      "title": "ApplicableVoucher"
    },
    "ApplicableVoucherReq": {
      "type": "object",
      "properties": {
        "additionVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "promotionType": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "string"
        }
      },
      "title": "ApplicableVoucherReq"
    },
    "ApplicableVoucherRes": {
      "type": "object",
      "properties": {
        "additionalVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "promotionType": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "number"
        }
      },
      "title": "ApplicableVoucherRes"
    },
    "Authorization": {
      "type": "object",
      "properties": {
        "approvalCode": {
          "type": "string"
        },
        "batch": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "coupons": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "siteAddress": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        },
        "stan": {
          "type": "string"
        },
        "terminalID": {
          "type": "string"
        }
      },
      "title": "Authorization"
    },
    "CancelRO": {
      "type": "object",
      "properties": {
        "mobilePaymentData": {
          "$ref": "#/definitions/MobilePaymentData"
        },
        "requestData": {
          "$ref": "#/definitions/RequestData"
        }
      },
      "title": "CancelRO"
    },
    "CancelRequest": {
      "type": "object",
      "properties": {
        "customerID": {
          "type": "string"
        },
        "paymentID": {
          "type": "string"
        }
      },
      "title": "CancelRequest"
    },
    "CancelResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "paymentId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "CancelResponse"
    },
    "CardValue": {
      "type": "object",
      "properties": {
        "cardCircuit": {
          "type": "string"
        },
        "cardEntryMode": {
          "type": "string"
        },
        "cardID": {
          "type": "string"
        },
        "inString": {
          "type": "string"
        },
        "loyaltyExceptionIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "methodOfPaymentName": {
          "type": "string"
        },
        "pointsRedeemed": {
          "type": "integer",
          "format": "int32"
        },
        "totalAmount": {
          "type": "string"
        },
        "trackers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tracker"
          }
        }
      },
      "title": "CardValue"
    },
    "CustomerData": {
      "type": "object",
      "properties": {
        "customerDataType": {
          "type": "string"
        },
        "customerDataValue": {
          "type": "string"
        },
        "loyaltyType": {
          "type": "string"
        },
        "pointsRedeemed": {
          "type": "number"
        }
      },
      "title": "CustomerData"
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "identifierName": {
          "type": "string",
          "enum": [
            "cardnumber",
            "customerId",
            "email",
            "externalId",
            "mobile",
            "wechat"
          ]
        },
        "identifierValue": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "title": "CustomerInfo"
    },
    "ExternalAPIErrorCodeMapping": {
      "type": "object",
      "properties": {
        "apiName": {
          "type": "string"
        },
        "brand": {
          "type": "string",
          "enum": [
            "SHELL"
          ]
        },
        "errorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "otaErrorNumber": {
          "type": "string"
        },
        "retryable": {
          "type": "boolean"
        },
        "useCase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        }
      },
      "title": "ExternalAPIErrorCodeMapping"
    },
    "ExternalAPIErrorCodeMappingDto": {
      "type": "object",
      "properties": {
        "apiName": {
          "type": "string"
        },
        "brand": {
          "type": "string",
          "enum": [
            "SHELL"
          ]
        },
        "errorNumber": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "otaErrorNumber": {
          "type": "string"
        },
        "retryable": {
          "type": "boolean"
        },
        "useCase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        }
      },
      "title": "ExternalAPIErrorCodeMappingDto"
    },
    "ExternalAPIErrorCodeMappingResponse": {
      "type": "object",
      "properties": {
        "apiName": {
          "type": "string"
        },
        "brand": {
          "type": "string",
          "enum": [
            "SHELL"
          ]
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "otaErrorNumber": {
          "type": "string"
        },
        "retryable": {
          "type": "boolean"
        },
        "useCase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        }
      },
      "title": "ExternalAPIErrorCodeMappingResponse"
    },
    "GetEntityResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "workflowMeta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrgWorkflowMetaDto"
          }
        }
      },
      "title": "GetEntityResponse"
    },
    "HashingSupportResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "HashingSupportResponse"
    },
    "IntermediateCatchEvent": {
      "type": "object",
      "properties": {
        "intermediateCatchEventType": {
          "type": "string",
          "enum": [
            "DELAYED_TIMER"
          ]
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "IntermediateCatchEvent"
    },
    "LoyaltyDetails": {
      "type": "object",
      "properties": {
        "loyaltyPAN": {
          "type": "string"
        },
        "loyaltyType": {
          "type": "string"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "methodOfPaymentName": {
          "type": "string"
        },
        "pointsRedeemed": {
          "type": "integer",
          "format": "int32"
        },
        "totalAmount": {
          "type": "number"
        },
        "trackers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tracker"
          }
        }
      },
      "title": "LoyaltyDetails"
    },
    "LoyaltyOffer": {
      "type": "object",
      "properties": {
        "loyaltyOfferDescription": {
          "type": "string"
        },
        "loyaltyOfferID": {
          "type": "string"
        },
        "promotionType": {
          "type": "string",
          "enum": [
            "Cart",
            "lineitem"
          ]
        },
        "referenceID": {
          "type": "string"
        }
      },
      "title": "LoyaltyOffer"
    },
    "Message": {
      "type": "object",
      "properties": {
        "cashierMessage": {
          "type": "string"
        }
      },
      "title": "Message"
    },
    "MobilePaymentData": {
      "type": "object",
      "properties": {
        "acquirerID": {
          "type": "string"
        },
        "globalRetailSiteID": {
          "type": "string"
        },
        "loyaltyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyDetails"
          }
        },
        "loyaltyExceptionIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "merchantID": {
          "type": "string"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "methodOfPaymentName": {
          "type": "string"
        },
        "paymentData": {
          "type": "string"
        },
        "paymentServiceProvider": {
          "type": "string"
        },
        "pumpNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalAmount": {
          "type": "number"
        }
      },
      "title": "MobilePaymentData"
    },
    "MobileResponseBody«PreAuthorizeStep»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PreAuthorizeStep"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processInstanceId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "MobileResponseBody«PreAuthorizeStep»"
    },
    "MobileResponseBody«PumpReserve»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PumpReserve"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processInstanceId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "MobileResponseBody«PumpReserve»"
    },
    "MobileResponseBody«TokenizeRO»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TokenizeRO"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processInstanceId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "MobileResponseBody«TokenizeRO»"
    },
    "OfferEvaluation": {
      "type": "object",
      "properties": {
        "applicableVouchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableVoucher"
          }
        },
        "customerData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerData"
          }
        },
        "messages": {
          "$ref": "#/definitions/Message"
        },
        "posData": {
          "$ref": "#/definitions/PosData"
        },
        "predictedTender": {
          "$ref": "#/definitions/PredictedTender"
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        },
        "remainder": {
          "type": "number"
        },
        "requestData": {
          "$ref": "#/definitions/RequestData"
        },
        "responseData": {
          "$ref": "#/definitions/ResponseData"
        },
        "saleItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaleItem"
          }
        },
        "siteData": {
          "$ref": "#/definitions/SiteData"
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          }
        },
        "totalAmount": {
          "type": "number"
        },
        "voucherCodesResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherCodesResult"
          }
        }
      },
      "title": "OfferEvaluation"
    },
    "OfferEvaluationReq": {
      "type": "object",
      "properties": {
        "applicableVouchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableVoucherReq"
          }
        },
        "customerData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerData"
          }
        },
        "messages": {
          "$ref": "#/definitions/Message"
        },
        "posData": {
          "$ref": "#/definitions/PosDataReq"
        },
        "predictedTender": {
          "$ref": "#/definitions/PredictedTender"
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        },
        "remainder": {
          "type": "number"
        },
        "requestData": {
          "$ref": "#/definitions/RequestDataReq"
        },
        "responseData": {
          "$ref": "#/definitions/ResponseDataReq"
        },
        "saleItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaleItemReq"
          }
        },
        "siteData": {
          "$ref": "#/definitions/SiteDataReq"
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenderReq"
          }
        },
        "totalAmount": {
          "type": "number"
        },
        "voucherCodesResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherCodesResult"
          }
        }
      },
      "title": "OfferEvaluationReq"
    },
    "OfferEvaluationRes": {
      "type": "object",
      "properties": {
        "applicableVouchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableVoucherRes"
          }
        },
        "customerData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerData"
          }
        },
        "messages": {
          "$ref": "#/definitions/Message"
        },
        "posData": {
          "$ref": "#/definitions/PosDataRes"
        },
        "predictedTender": {
          "$ref": "#/definitions/PredictedTender"
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        },
        "remainder": {
          "type": "number"
        },
        "requestData": {
          "$ref": "#/definitions/RequestDataRes"
        },
        "responseData": {
          "$ref": "#/definitions/ResponseDataRes"
        },
        "saleItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaleItemRes"
          }
        },
        "siteData": {
          "$ref": "#/definitions/SiteDataRes"
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenderRes"
          }
        },
        "totalAmount": {
          "type": "number"
        },
        "voucherCodesResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherCodesResult"
          }
        }
      },
      "title": "OfferEvaluationRes"
    },
    "OrgWorkflowMetaDto": {
      "type": "object",
      "properties": {
        "autoUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "integer",
          "format": "int64"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "diffJson": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isActive": {
          "type": "boolean"
        },
        "isApproved": {
          "type": "boolean"
        },
        "isAsync": {
          "type": "boolean"
        },
        "isDefault": {
          "type": "boolean"
        },
        "merchantIdStrategy": {
          "type": "string",
          "enum": [
            "ORG_LEVEL",
            "PER_STORE"
          ]
        },
        "orgId": {
          "type": "integer",
          "format": "int64"
        },
        "processId": {
          "type": "string"
        },
        "promotedOn": {
          "type": "string",
          "format": "date-time"
        },
        "useCase": {
          "type": "string"
        },
        "versionName": {
          "type": "string"
        },
        "workflowJson": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        }
      },
      "title": "OrgWorkflowMetaDto"
    },
    "OriginalTransaction": {
      "type": "object",
      "properties": {
        "approvalCode": {
          "type": "string"
        },
        "authorizationToken": {
          "type": "string"
        },
        "stan": {
          "type": "string"
        },
        "terminalBatch": {
          "type": "string"
        },
        "terminalID": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "OriginalTransaction"
    },
    "PerformanceBo": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "failurePercentage": {
          "type": "number"
        }
      },
      "title": "PerformanceBo"
    },
    "PosData": {
      "type": "object",
      "properties": {
        "LanguageCode": {
          "type": "string"
        },
        "posTimeStamp": {
          "type": "string"
        },
        "transactionNumber": {
          "type": "string"
        }
      },
      "title": "PosData"
    },
    "PosDataReq": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "actionCodeDescription": {
          "type": "string"
        },
        "clerkID": {
          "type": "string"
        },
        "originalSalePosTimeStamp": {
          "type": "string"
        },
        "posTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "pumpNumber": {
          "type": "string"
        },
        "terminalID": {
          "type": "string"
        },
        "transactionNumber": {
          "type": "string"
        }
      },
      "title": "PosDataReq"
    },
    "PosDataRes": {
      "type": "object",
      "properties": {
        "LanguageCode": {
          "type": "string"
        },
        "posTimeStamp": {
          "type": "string"
        },
        "transactionNumber": {
          "type": "string"
        }
      },
      "title": "PosDataRes"
    },
    "PreAuthorizeStep": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string"
        },
        "processInstanceId": {
          "type": "string"
        },
        "pspReferenceNumber": {
          "type": "string"
        }
      },
      "title": "PreAuthorizeStep"
    },
    "PredictedTender": {
      "type": "object",
      "properties": {
        "acquirer": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "methodOfPayment": {
          "type": "string"
        },
        "substractDiscountAmount": {
          "type": "boolean"
        }
      },
      "title": "PredictedTender"
    },
    "PriceAdjustment": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "loyaltyOfferID": {
          "type": "string"
        },
        "priceAdjustmentID": {
          "type": "string"
        },
        "priceAdjustmentType": {
          "type": "string",
          "enum": [
            "Coupon",
            "Gift",
            "Local Discount",
            "Price Override",
            "RealtimeOffer-A",
            "RealtimeOffer-U",
            "Voucher"
          ]
        },
        "promotionType": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "reason": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        }
      },
      "title": "PriceAdjustment"
    },
    "PriceAdjustmentReq": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "loyaltyOfferID": {
          "type": "string"
        },
        "netAmount": {
          "type": "number"
        },
        "originalAmount": {
          "type": "number"
        },
        "originalNetAmount": {
          "type": "number"
        },
        "priceAdjustmentID": {
          "type": "string"
        },
        "priceAdjustmentType": {
          "type": "string",
          "enum": [
            "Coupon",
            "Gift",
            "Local Discount",
            "Price Override",
            "RealtimeOffer-A",
            "RealtimeOffer-U",
            "Voucher"
          ]
        },
        "productCode": {
          "type": "string"
        },
        "promotionType": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "reason": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "taxSplit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxSplit"
          }
        },
        "unitOfMeasure": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "vat": {
          "type": "number"
        }
      },
      "title": "PriceAdjustmentReq"
    },
    "PriceAdjustmentRes": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "loyaltyOfferID": {
          "type": "string"
        },
        "priceAdjustmentID": {
          "type": "string"
        },
        "priceAdjustmentType": {
          "type": "string",
          "enum": [
            "Coupon",
            "Gift",
            "Local Discount",
            "Price Override",
            "RealtimeOffer-A",
            "RealtimeOffer-U",
            "Voucher"
          ]
        },
        "promotionType": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "reason": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        }
      },
      "title": "PriceAdjustmentRes"
    },
    "Product": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "additionalProductInfo": {
          "type": "string"
        },
        "categoryCode": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "subCategoryCode": {
          "type": "string"
        }
      },
      "title": "Product"
    },
    "PumpReserve": {
      "type": "object",
      "properties": {
        "additionalFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cardIdentifier": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "customerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "languageCode": {
          "type": "string"
        },
        "merchantIdentifier": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "preAuthAmount": {
          "type": "string"
        },
        "pspIdentifier": {
          "type": "string",
          "enum": [
            "2C2P",
            "EGHL"
          ]
        },
        "pumpNumber": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        }
      },
      "title": "PumpReserve"
    },
    "Receipt": {
      "type": "object",
      "properties": {
        "receiptLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Receipt"
    },
    "RequestData": {
      "type": "object",
      "properties": {
        "cartEvaluationID": {
          "type": "string"
        },
        "extCorrelationId": {
          "type": "string"
        },
        "payTokenID": {
          "type": "string"
        },
        "processInstanceId": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "workstationID": {
          "type": "string"
        }
      },
      "title": "RequestData"
    },
    "RequestDataReq": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "actionCodeDescription": {
          "type": "string"
        },
        "cartEvaluationID": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "extCorrelationId": {
          "type": "string"
        },
        "payTokenID": {
          "type": "string"
        },
        "paymentServiceProvider": {
          "type": "string"
        },
        "processInstanceId": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "transactionNumber": {
          "type": "string"
        },
        "workstationID": {
          "type": "string"
        }
      },
      "title": "RequestDataReq"
    },
    "RequestDataRes": {
      "type": "object",
      "properties": {
        "overallResult": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        }
      },
      "title": "RequestDataRes"
    },
    "ResponseData": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "actionCodeDescription": {
          "type": "string"
        },
        "cartEvaluationID": {
          "type": "string"
        },
        "extCorrelationID": {
          "type": "string"
        },
        "overallResult": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "workstationID": {
          "type": "string"
        }
      },
      "title": "ResponseData"
    },
    "ResponseDataReq": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "actionCodeDescription": {
          "type": "string"
        },
        "cartEvaluationID": {
          "type": "string"
        },
        "extCorrelationID": {
          "type": "string"
        },
        "overallResult": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "requestType": {
          "type": "string"
        },
        "workstationID": {
          "type": "string"
        }
      },
      "title": "ResponseDataReq"
    },
    "ResponseDataRes": {
      "type": "object",
      "properties": {
        "requestType": {
          "type": "string"
        }
      },
      "title": "ResponseDataRes"
    },
    "SaleItem": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "additionalProductInfo": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "loyaltyOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyOffer"
          }
        },
        "markDownIndicator": {
          "type": "boolean"
        },
        "originalAmount": {
          "type": "number"
        },
        "priceAdjustments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceAdjustment"
          }
        },
        "productCode": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "saleChannel": {
          "type": "integer",
          "format": "int32"
        },
        "saleItemType": {
          "type": "string"
        },
        "subCategoryCode": {
          "type": "string"
        },
        "unitMeasure": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "vatRate": {
          "type": "number"
        }
      },
      "title": "SaleItem"
    },
    "SaleItemReq": {
      "type": "object",
      "properties": {
        "LineNo": {
          "type": "string"
        },
        "additionalProductCode": {
          "type": "string"
        },
        "additionalProductInfo": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "loyaltyOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyOffer"
          }
        },
        "markDownIndicator": {
          "type": "boolean"
        },
        "netAmount": {
          "type": "number"
        },
        "originalAmount": {
          "type": "number"
        },
        "originalNetAmount": {
          "type": "number"
        },
        "priceAdjustments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceAdjustmentReq"
          }
        },
        "productCode": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "saleChannel": {
          "type": "string"
        },
        "saleItemType": {
          "type": "string"
        },
        "taxAmount": {
          "type": "number"
        },
        "taxCode": {
          "type": "string"
        },
        "taxRate": {
          "type": "number"
        },
        "unitOfMeasure": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "vatRate": {
          "type": "number"
        }
      },
      "title": "SaleItemReq"
    },
    "SaleItemRes": {
      "type": "object",
      "properties": {
        "additionalProductCode": {
          "type": "string"
        },
        "additionalProductInfo": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "categoryCode": {
          "type": "string"
        },
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "loyaltyOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyOffer"
          }
        },
        "markDownIndicator": {
          "type": "boolean"
        },
        "originalAmount": {
          "type": "number"
        },
        "priceAdjustments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceAdjustmentRes"
          }
        },
        "productCode": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "saleChannel": {
          "type": "integer",
          "format": "int32"
        },
        "saleItemType": {
          "type": "string"
        },
        "subCategoryCode": {
          "type": "string"
        },
        "unitMeasure": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "vatRate": {
          "type": "number"
        }
      },
      "title": "SaleItemRes"
    },
    "SaleTransaction": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "coupons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currency": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "extraDiscountAmount": {
          "type": "number"
        },
        "loyaltyPointAmount": {
          "type": "integer",
          "format": "int32"
        },
        "merchantName": {
          "type": "string"
        },
        "netAmount": {
          "type": "number"
        },
        "siteAddress": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        },
        "taxReferenceNumber": {
          "type": "string"
        },
        "terminalID": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string"
        },
        "totalAmount": {
          "type": "number"
        },
        "totalDiscountAmount": {
          "type": "number"
        },
        "totalTaxAmount": {
          "type": "number"
        },
        "transactionNumber": {
          "type": "string"
        }
      },
      "title": "SaleTransaction"
    },
    "ShellTransactionResponse": {
      "type": "object",
      "properties": {
        "requestData": {
          "$ref": "#/definitions/RequestDataRes"
        },
        "responseData": {
          "$ref": "#/definitions/ResponseDataRes"
        }
      },
      "title": "ShellTransactionResponse"
    },
    "SingleResponse«ExternalAPIErrorCodeMappingResponse»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ExternalAPIErrorCodeMappingResponse"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processId": {
          "type": "string"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "SingleResponse«ExternalAPIErrorCodeMappingResponse»"
    },
    "SingleResponse«List«UserTransactionBo»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserTransactionBo"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processId": {
          "type": "string"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "SingleResponse«List«UserTransactionBo»»"
    },
    "SingleResponse«OfferEvaluation»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/OfferEvaluationRes"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processId": {
          "type": "string"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "SingleResponse«OfferEvaluation»"
    },
    "SingleResponse«TxnStatusBo»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TxnStatusBo"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processId": {
          "type": "string"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "SingleResponse«TxnStatusBo»"
    },
    "SingleResponse«WorkFlowCreationResponse»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkFlowCreationResponse"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "processId": {
          "type": "string"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "SingleResponse«WorkFlowCreationResponse»"
    },
    "SiteData": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "siteID": {
          "type": "string"
        }
      },
      "title": "SiteData"
    },
    "SiteDataReq": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        }
      },
      "title": "SiteDataReq"
    },
    "SiteDataRes": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "siteID": {
          "type": "string"
        }
      },
      "title": "SiteDataRes"
    },
    "StatResponse«Map«string,PerformanceBo»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PerformanceBo"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "success": {
          "type": "boolean"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "StatResponse«Map«string,PerformanceBo»»"
    },
    "StatusCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "isWarning": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "StatusCode"
    },
    "TaxSplit": {
      "type": "object",
      "properties": {
        "additionalAmount": {
          "type": "number"
        },
        "amount": {
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "rate": {
          "type": "number"
        },
        "taxID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TaxSplit"
    },
    "Tender": {
      "type": "object",
      "properties": {
        "acquirerID": {
          "type": "string"
        },
        "cashRedeemed": {
          "type": "number"
        },
        "currencyCode": {
          "type": "string"
        },
        "methodOfPayment": {
          "type": "string"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "netTenderAmount": {
          "type": "number"
        },
        "pointsRedeemed": {
          "type": "number"
        },
        "substractDiscountAmount": {
          "type": "boolean"
        },
        "tenderID": {
          "type": "integer",
          "format": "int32"
        },
        "totalAmount": {
          "type": "number"
        },
        "voucherRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherRule"
          }
        }
      },
      "title": "Tender"
    },
    "TenderReq": {
      "type": "object",
      "properties": {
        "acquirerID": {
          "type": "string"
        },
        "methodOfPayment": {
          "type": "string"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "netTenderAmount": {
          "type": "string"
        },
        "pointsRedeemed": {
          "type": "string"
        },
        "substractDiscountAmount": {
          "type": "boolean"
        },
        "tenderID": {
          "type": "string"
        },
        "totalAmount": {
          "type": "string"
        },
        "voucherRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherRuleReq"
          }
        }
      },
      "title": "TenderReq"
    },
    "TenderRes": {
      "type": "object",
      "properties": {
        "acquirerID": {
          "type": "string"
        },
        "cashRedeemed": {
          "type": "number"
        },
        "currencyCode": {
          "type": "string"
        },
        "methodOfPayment": {
          "type": "string"
        },
        "methodOfPaymentID": {
          "type": "string"
        },
        "netTenderAmount": {
          "type": "number"
        },
        "pointsRedeemed": {
          "type": "number"
        },
        "substractDiscountAmount": {
          "type": "boolean"
        },
        "tenderID": {
          "type": "integer",
          "format": "int32"
        },
        "totalAmount": {
          "type": "number"
        },
        "voucherRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherRuleRes"
          }
        }
      },
      "title": "TenderRes"
    },
    "Terminal": {
      "type": "object",
      "properties": {
        "stan": {
          "type": "string"
        },
        "terminalBatch": {
          "type": "string"
        }
      },
      "title": "Terminal"
    },
    "TokenizeRO": {
      "type": "object",
      "properties": {
        "additionalFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "currencyCode": {
          "type": "string"
        },
        "customerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "merchantIdentifier": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "pspIdentifier": {
          "type": "string",
          "enum": [
            "2C2P",
            "EGHL"
          ]
        },
        "registrationAmount": {
          "type": "string"
        }
      },
      "title": "TokenizeRO"
    },
    "Tracker": {
      "type": "object",
      "properties": {
        "trackerEarned": {
          "type": "string"
        },
        "trackerRedeemed": {
          "type": "string"
        },
        "trackerType": {
          "type": "string"
        },
        "trackerValue": {
          "type": "string"
        }
      },
      "title": "Tracker"
    },
    "TransactionAddRO": {
      "type": "object",
      "properties": {
        "applicableVouchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicableVoucher"
          }
        },
        "billingNumber": {
          "type": "string"
        },
        "cardValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardValue"
          }
        },
        "customerData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerData"
          }
        },
        "mobilePaymentData": {
          "$ref": "#/definitions/MobilePaymentData"
        },
        "originalTransaction": {
          "$ref": "#/definitions/OriginalTransaction"
        },
        "posData": {
          "$ref": "#/definitions/PosData"
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        },
        "requestData": {
          "$ref": "#/definitions/RequestData"
        },
        "saleItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaleItem"
          }
        },
        "saleTransaction": {
          "$ref": "#/definitions/SaleTransaction"
        },
        "siteData": {
          "$ref": "#/definitions/SiteData"
        },
        "tenders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tender"
          }
        },
        "terminal": {
          "$ref": "#/definitions/Terminal"
        },
        "totalAmount": {
          "type": "number"
        }
      },
      "title": "TransactionAddRO"
    },
    "TransactionAddResponse": {
      "type": "object",
      "properties": {
        "shellResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShellTransactionResponse"
          }
        }
      },
      "title": "TransactionAddResponse"
    },
    "TxnStatusBo": {
      "type": "object",
      "properties": {
        "cardType": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "digitalCard": {
          "type": "string"
        },
        "extCorrelationId": {
          "type": "string"
        },
        "finalStatus": {
          "type": "string"
        },
        "invoice": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "maskedCard": {
          "type": "string"
        },
        "merchantId": {
          "type": "string"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "methodOfPaymentId": {
          "type": "string"
        },
        "mopId": {
          "type": "string"
        },
        "mopName": {
          "type": "string"
        },
        "orgId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentId": {
          "type": "string"
        },
        "paymentProviderName": {
          "type": "string"
        },
        "preAuthAmount": {
          "type": "string"
        },
        "processInstanceId": {
          "type": "string"
        },
        "pumpNumber": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "string"
        },
        "startTimestampOld": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "workFlowName": {
          "type": "string"
        },
        "workFlowVersion": {
          "type": "string"
        }
      },
      "title": "TxnStatusBo"
    },
    "UpdatedEntityResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        },
        "success": {
          "type": "boolean"
        },
        "violations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Violation"
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCode"
          }
        }
      },
      "title": "UpdatedEntityResponse"
    },
    "UserTransactionBo": {
      "type": "object",
      "properties": {
        "extCorrelationId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "invoice": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "preAuthAmount": {
          "type": "string"
        },
        "pumpId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "startTimestamp": {
          "type": "string"
        },
        "startTimestampOld": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "UserTransactionBo"
    },
    "Violation": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "invalidValue": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "Violation"
    },
    "VoucherCodesResult": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "integer",
          "format": "int32"
        },
        "actionCodeDescription": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        }
      },
      "title": "VoucherCodesResult"
    },
    "VoucherRule": {
      "type": "object",
      "properties": {
        "additionalVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "promotionType": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "number"
        }
      },
      "title": "VoucherRule"
    },
    "VoucherRuleReq": {
      "type": "object",
      "properties": {
        "additionalVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "referenceId": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "number"
        }
      },
      "title": "VoucherRuleReq"
    },
    "VoucherRuleRes": {
      "type": "object",
      "properties": {
        "additionalVoucherInfo": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "promotionType": {
          "type": "string"
        },
        "referenceID": {
          "type": "string"
        },
        "voucherCode": {
          "type": "string"
        },
        "voucherQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "voucherType": {
          "type": "string"
        },
        "voucherValue": {
          "type": "number"
        }
      },
      "title": "VoucherRuleRes"
    },
    "WorkFlowCreationResponse": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "WorkFlowCreationResponse"
    },
    "WorkFlowPromote": {
      "type": "object",
      "properties": {
        "usecase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        },
        "version": {
          "type": "string"
        },
        "workFlowName": {
          "type": "string"
        }
      },
      "title": "WorkFlowPromote"
    },
    "WorkflowInputAction": {
      "type": "object",
      "properties": {
        "actionGroupType": {
          "type": "string",
          "enum": [
            "PARALLEL",
            "SERIAL",
            "XOR"
          ]
        },
        "connectBoundaryEvent": {
          "type": "boolean"
        },
        "delayTimeInRetrial": {
          "type": "integer",
          "format": "int32"
        },
        "httpCallInputProperties": {
          "$ref": "#/definitions/ActionInput"
        },
        "httpCallInputPropertiesRollback": {
          "$ref": "#/definitions/ActionInput"
        },
        "intermediateCatchEvent": {
          "$ref": "#/definitions/IntermediateCatchEvent"
        },
        "isAsync": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "retrialCount": {
          "type": "integer",
          "format": "int32"
        },
        "rollbackName": {
          "type": "string"
        },
        "rollbackType": {
          "type": "string",
          "enum": [
            "CCCaptureAction",
            "addTransactionAction",
            "authorizePaymentWithPsp",
            "cardRegistrationTimedOutAction",
            "confirmAuthWithPSPAction",
            "customerLockAction",
            "dummyAction",
            "eghlHashGenerationAction",
            "emptyAction",
            "generatePaymentIdAction",
            "invalid",
            "oAuthHttpAction",
            "offerEvaluationAction",
            "publishNotificationAction",
            "pumpAuthNotificationAction",
            "pumpAuthReversalNotificationAction",
            "pumpReserveTimedOutAction",
            "releaseCustomerLockAction",
            "saveCCardAction",
            "tokenizationReversalWithPSPAction",
            "txnAddNotificationAction",
            "verifyAuthWithPSPAction"
          ]
        },
        "serialNumber": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "CCCaptureAction",
            "addTransactionAction",
            "authorizePaymentWithPsp",
            "cardRegistrationTimedOutAction",
            "confirmAuthWithPSPAction",
            "customerLockAction",
            "dummyAction",
            "eghlHashGenerationAction",
            "emptyAction",
            "generatePaymentIdAction",
            "invalid",
            "oAuthHttpAction",
            "offerEvaluationAction",
            "publishNotificationAction",
            "pumpAuthNotificationAction",
            "pumpAuthReversalNotificationAction",
            "pumpReserveTimedOutAction",
            "releaseCustomerLockAction",
            "saveCCardAction",
            "tokenizationReversalWithPSPAction",
            "txnAddNotificationAction",
            "verifyAuthWithPSPAction"
          ]
        }
      },
      "title": "WorkflowInputAction"
    },
    "WorkflowProcess": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string",
          "enum": [
            "SHELL"
          ]
        },
        "countryCode": {
          "type": "string"
        },
        "isAsync": {
          "type": "boolean"
        },
        "merchantIDStrategy": {
          "type": "string",
          "enum": [
            "ORG_LEVEL",
            "PER_STORE"
          ]
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStep"
          }
        },
        "useCase": {
          "type": "string",
          "enum": [
            "CARD_REGISTRATION",
            "FUELING",
            "NON"
          ]
        }
      },
      "title": "WorkflowProcess"
    },
    "WorkflowStep": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowInputAction"
          }
        },
        "boundaryEventType": {
          "type": "string",
          "enum": [
            "DELAYED_TIMER"
          ]
        },
        "delayedTimeInMillis": {
          "type": "integer",
          "format": "int64"
        },
        "maxWaitTimeInMillis": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "serialNumber": {
          "type": "integer",
          "format": "int32"
        },
        "startBoundaryEventActionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowInputAction"
          }
        },
        "startUserStep": {
          "type": "boolean"
        }
      },
      "title": "WorkflowStep"
    },
    "_2c2pCallbackRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string"
        }
      },
      "title": "_2c2pCallbackRequest"
    }
  }
}
